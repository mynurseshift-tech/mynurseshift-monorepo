{"version":3,"sources":["../../../../../../../packages/vite/src/generators/init/lib/utils.ts"],"sourcesContent":["import {\n  addDependenciesToPackageJson,\n  logger,\n  readJson,\n  readNxJson,\n  Tree,\n  updateJson,\n  updateNxJson,\n} from '@nx/devkit';\n\nimport {\n  edgeRuntimeVmVersion,\n  happyDomVersion,\n  jsdomVersion,\n  nxVersion,\n  vitePluginDtsVersion,\n  vitePluginReactSwcVersion,\n  vitePluginReactVersion,\n  vitestVersion,\n  viteVersion,\n} from '../../../utils/versions';\nimport { InitGeneratorSchema } from '../schema';\n\nexport function checkDependenciesInstalled(\n  host: Tree,\n  schema: InitGeneratorSchema\n) {\n  const packageJson = readJson(host, 'package.json');\n  const devDependencies = {};\n  const dependencies = {};\n  packageJson.dependencies = packageJson.dependencies || {};\n  packageJson.devDependencies = packageJson.devDependencies || {};\n\n  // base deps\n  devDependencies['@nx/vite'] = nxVersion;\n  devDependencies['vite'] = viteVersion;\n  devDependencies['vitest'] = vitestVersion;\n  devDependencies['@vitest/ui'] = vitestVersion;\n\n  if (schema.testEnvironment === 'jsdom') {\n    devDependencies['jsdom'] = jsdomVersion;\n  } else if (schema.testEnvironment === 'happy-dom') {\n    devDependencies['happy-dom'] = happyDomVersion;\n  } else if (schema.testEnvironment === 'edge-runtime') {\n    devDependencies['@edge-runtime/vm'] = edgeRuntimeVmVersion;\n  } else if (schema.testEnvironment !== 'node' && schema.testEnvironment) {\n    logger.info(\n      `A custom environment was provided: ${schema.testEnvironment}. You need to install it manually.`\n    );\n  }\n\n  if (schema.uiFramework === 'react') {\n    if (schema.compiler === 'swc') {\n      devDependencies['@vitejs/plugin-react-swc'] = vitePluginReactSwcVersion;\n    } else {\n      devDependencies['@vitejs/plugin-react'] = vitePluginReactVersion;\n    }\n  }\n\n  if (schema.includeLib) {\n    devDependencies['vite-plugin-dts'] = vitePluginDtsVersion;\n  }\n\n  return addDependenciesToPackageJson(host, dependencies, devDependencies);\n}\n\nexport function moveToDevDependencies(tree: Tree) {\n  updateJson(tree, 'package.json', (packageJson) => {\n    packageJson.dependencies = packageJson.dependencies || {};\n    packageJson.devDependencies = packageJson.devDependencies || {};\n\n    if (packageJson.dependencies['@nx/vite']) {\n      packageJson.devDependencies['@nx/vite'] =\n        packageJson.dependencies['@nx/vite'];\n      delete packageJson.dependencies['@nx/vite'];\n    }\n    return packageJson;\n  });\n}\n\nexport function createVitestConfig(tree: Tree) {\n  const nxJson = readNxJson(tree);\n\n  const productionFileSet = nxJson.namedInputs?.production;\n  if (productionFileSet) {\n    productionFileSet.push(\n      '!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)',\n      '!{projectRoot}/tsconfig.spec.json'\n    );\n\n    nxJson.namedInputs.production = Array.from(new Set(productionFileSet));\n  }\n\n  updateNxJson(tree, nxJson);\n}\n\nexport function addPlugin(tree: Tree) {\n  const nxJson = readNxJson(tree);\n  nxJson.plugins ??= [];\n\n  for (const plugin of nxJson.plugins) {\n    if (\n      typeof plugin === 'string'\n        ? plugin === '@nx/vite/plugin'\n        : plugin.plugin === '@nx/vite/plugin'\n    ) {\n      return;\n    }\n  }\n\n  nxJson.plugins.push({\n    plugin: '@nx/vite/plugin',\n    options: {\n      buildTargetName: 'build',\n      previewTargetName: 'preview',\n      testTargetName: 'test',\n      serveTargetName: 'serve',\n      serveStaticTargetName: 'serve-static',\n    },\n  });\n  updateNxJson(tree, nxJson);\n}\n"],"names":["checkDependenciesInstalled","moveToDevDependencies","createVitestConfig","addPlugin","host","schema","packageJson","readJson","devDependencies","dependencies","nxVersion","viteVersion","vitestVersion","testEnvironment","jsdomVersion","happyDomVersion","edgeRuntimeVmVersion","logger","info","uiFramework","compiler","vitePluginReactSwcVersion","vitePluginReactVersion","includeLib","vitePluginDtsVersion","addDependenciesToPackageJson","tree","updateJson","nxJson","readNxJson","productionFileSet","namedInputs","production","push","Array","from","Set","updateNxJson","plugins","plugin","options","buildTargetName","previewTargetName","testTargetName","serveTargetName","serveStaticTargetName"],"mappings":"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"}